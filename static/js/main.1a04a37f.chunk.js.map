{"version":3,"sources":["Components/InputNya/InputNya.module.css","Components/ButtonNya/ButtonNya.module.css","Components/TodoList/TodoList.module.css","Components/Navbar/Navbar.tsx","Components/MessageBox/MessageBox.tsx","Components/Username/Username.tsx","Components/TodoList/TodoList.tsx","Components/InputNya/InputNya.tsx","Components/ButtonNya/ButtonNya.tsx","Components/Hello/Hello.tsx","PreJunior/PreJunior.tsx","Components/Common/Editable.tsx","Junior/Junior.tsx","localStorage_functions.tsx","App.tsx","serviceWorker.ts","index.tsx","Components/MessageBox/MessageBox.module.css","Components/Navbar/Navbar.module.css"],"names":["module","exports","Navbar","className","s","nav","nav__link","to","activeClassName","active","MessageBox","props","classes","wrapper","avatar","img","src","alt","MessageBox__userName","name","MessageBox__message","messageText","lastItem","MessageBox__date","date","Username","firstName","lastName","patronymic","TodoList","tskTaks","tasks","map","item","todoItem","key","id","todo","todo__priority","priority","btnClose","onClick","removeTask","title","todoItems","btns","btn","btn_all","toFilter","btn_high","btn_middle","btn_low","InputNya","onEnter","error","restProps","inputNya","onKeyPress","e","charCode","type","ButtonNya","buttonNya","Hello","console","log","useState","setName","value","onChange","currentTarget","hello","names","index","PreJunior","messageElem","v1","todolist","setTodolist","todolist2","filter","setFilter","f","push","alert","Editable","editMode","onBlur","setEditMode","autoFocus","inputValue","setInputValue","onChangeHandler","onDoubleClick","Junior","state","stateAsString","JSON","stringify","localStorage","setItem","saveState","getItem","result","parse","restore","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.1a04a37f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputNya\":\"InputNya_inputNya__3fu7r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonNya\":\"ButtonNya_buttonNya__1ruyQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"TodoList_btn__6c1o7\",\"btns\":\"TodoList_btns__2e4fL\",\"btn_all\":\"TodoList_btn_all__SWuuv\",\"btn_high\":\"TodoList_btn_high__274lh\",\"btn_middle\":\"TodoList_btn_middle__313wj\",\"btn_low\":\"TodoList_btn_low__1KTr2\",\"btnClose\":\"TodoList_btnClose__VapEQ\",\"todoItem\":\"TodoList_todoItem___-iLr\",\"todo__priority\":\"TodoList_todo__priority__1ajux\",\"todo\":\"TodoList_todo__3poJp\",\"todoItems\":\"TodoList_todoItems__1piz2\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from \"./Navbar.module.css\";\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <div className={s.nav}>\r\n                <NavLink className={s.nav__link} to={\"/prejunior\"} activeClassName={s.active}>preJunior</NavLink>\r\n                <NavLink className={s.nav__link} to={\"/junior\"} activeClassName={s.active}>Junior</NavLink>\r\n                <NavLink className={s.nav__link} to={\"/junior_plus\"} activeClassName={s.active}>Junior+</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport classes from './MessageBox.module.css';\r\n\r\ntype MessageBoxPropsType = {\r\n    name: string,\r\n    messageText: string,\r\n    date: string\r\n}\r\n\r\n\r\nconst MessageBox = (props: MessageBoxPropsType) => {\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <div className={classes.avatar}>\r\n                <img className={classes.img} src=\"https://image.freepik.com/free-vector/businessman-character-avatar-icon-vector-illustration-design_24877-18271.jpg\" alt=\"\"/>\r\n            </div>\r\n            <div className={classes.MessageBox}>\r\n                    <div>\r\n                        <div className={classes.MessageBox__userName}>{props.name}</div>\r\n                        <div className={classes.MessageBox__message}>{props.messageText}</div>\r\n                    </div>\r\n                    <div className={`${classes.lastItem}`}>\r\n                        <div className={classes.MessageBox__date}>{props.date}</div>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default MessageBox","import React from 'react';\r\n\r\n\r\ntype UserNamePropsType = {\r\n    firstName: string,\r\n    lastName: string,\r\n    patronymic?: string\r\n  }\r\n  \r\n  const  Username = (props: UserNamePropsType) => {\r\n    return (\r\n       <div>{`${props.firstName} ${props.lastName} ${props.patronymic}`}</div>\r\n    )\r\n  }\r\n\r\nexport default Username;","import React from 'react';\r\nimport classes from './TodoList.module.css';\r\n\r\n\r\ntype TaskType = {\r\n    id: string,\r\n    todo: string,\r\n    priority: string\r\n}\r\n\r\ntype TodoListPropsType = {\r\n    title:string,\r\n    tasks:Array<TaskType>,\r\n    toFilter: (value:string) => void,\r\n    removeTask: (id: string) => void\r\n}\r\n\r\nfunction TodoList(props: TodoListPropsType) {\r\n\r\n    let tskTaks = props.tasks.map(item => {\r\n        return (\r\n        <div className={classes.todoItem} key={item.id}>\r\n            <div className={classes.todo}>{item.todo}</div>\r\n            <div className={classes.todo__priority}>{item.priority}</div>\r\n            <div className={classes.btnClose} onClick={() => { props.removeTask(item.id) }}><i className=\"fas fa-times\"></i></div>\r\n        </div>\r\n        )\r\n    })\r\n\r\n    return (\r\n           <div>\r\n               <h3>{props.title}</h3>\r\n               <div className={classes.todoItems}>\r\n                   {tskTaks}\r\n               </div>\r\n               <div className={classes.btns}>\r\n                    <button className={`${classes.btn} ${classes.btn_all}`} onClick={() => {props.toFilter(\"all\")}}>all</button>\r\n                    <button className={`${classes.btn} ${classes.btn_high}`} onClick={() => {props.toFilter(\"high\")}}>high</button>\r\n                    <button className={`${classes.btn} ${classes.btn_middle}`} onClick={() => {props.toFilter(\"middle\")}}>middle</button>\r\n                    <button className={`${classes.btn} ${classes.btn_low}`} onClick={() => {props.toFilter(\"low\")}}>low</button>\r\n               </div>\r\n           </div> \r\n    );\r\n}\r\n\r\nexport default TodoList;","import React, { DetailedHTMLProps, InputHTMLAttributes } from 'react';\r\nimport s from './InputNya.module.css';\r\n\r\nexport type InputNyaPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n& { onEnter?: () => void, error?: string };\r\n\r\n\r\nfunction InputNya (props: InputNyaPropsType) {\r\n    const {onEnter, error, ...restProps} = props;\r\n    \r\n    const onKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.charCode = 13) onEnter && onEnter();\r\n    }\r\n    \r\n    return (\r\n    <>\r\n    <input className={s.inputNya} onKeyPress={onKeyPress}  {...restProps} type=\"text\"/>\r\n    {error ? <span>{error}</span> : null}\r\n    </>\r\n    );\r\n};\r\n    \r\n\r\nexport default InputNya;","import React, { DetailedHTMLProps, ButtonHTMLAttributes } from 'react';\r\nimport s from './ButtonNya.module.css';\r\n\r\nexport type ButtonNyaPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\nfunction ButtonNya (props: ButtonNyaPropsType) {\r\n\r\nreturn <button className={s.buttonNya} {...props}/>\r\n}\r\n\r\nexport default ButtonNya;","import React, {useState} from 'react';\r\nimport { user } from '../../App';\r\nimport InputNya from '../InputNya/InputNya';\r\nimport ButtonNya from '../ButtonNya/ButtonNya';\r\n\r\n\r\ntype HelloPropsType  = {\r\n    names: Array<user>\r\n    hello: (name:string) => void\r\n}\r\n\r\nfunction Hello(props: HelloPropsType) {\r\n    console.log(\"Hellp Rendered\")\r\n    let [name, setName] = useState(\"\");\r\n    \r\n    \r\n    return (\r\n      <div>\r\n        <InputNya type=\"text\" value={name} onChange={ (e) => setName(e.currentTarget.value) }/>\r\n        <ButtonNya onClick={() => { props.hello(name); setName('')} }>Ввести</ButtonNya>\r\n        <div>\r\n            {props.names.map((item, index) => {\r\n                return <div key={item.id}>{1 + index}. {item.name}</div>\r\n            })}\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Hello;","import React, { useState } from 'react';\r\nimport MessageBox from '../Components/MessageBox/MessageBox';\r\nimport { v1 } from 'uuid';\r\nimport { user } from '../App';\r\nimport Username from '../Components/Username/Username';\r\nimport TodoList from '../Components/TodoList/TodoList';\r\nimport Hello from '../Components/Hello/Hello';\r\n\r\nlet names:Array<user> = [] \r\n\r\nfunction  PreJunior() {\r\n\r\n    let messages = [ //данные к 1 дз (MessageBox)\r\n        {name :\"Иван\", messageText:\"Lorem ipsum dolor sit=lectus quidem quis quam corporis rem laborum. Dolore sed aveniet culpa nemo veritatis tempore!\", date:\"12:43\"},\r\n        {name :\"Alex\", messageText:\"Lorem ipsum dolor sit amet consectetur adipisicing elit. At dolorem aspernatur cupiditate, qui alias neque iusto dolores voluptatem quas eveniet, ea minus delectus quidem quis quam corporis rem laborum. Dolore sed aspernatur numquam minus delectus eveniet culpa nemo veritatis tempore!\", date:\"23:00\"},\r\n      ]\r\n      let messageElem = messages.map(item => {\r\n        return <MessageBox name={item.name} messageText={item.messageText} date={item.date} />\r\n      })\r\n    \r\n      let [todolist, setTodolist] = useState([ // данные к 2 дз (Список дел)\r\n        {id: v1(), todo: \"Купить  Молоко\", priority: \"middle\"},\r\n        {id: v1(), todo: \"Футбол в 21:00\", priority: \"high\"},\r\n        {id: v1(), todo: \"Шиномонтажка\", priority: \"high\"},\r\n        {id: v1(), todo: \"Починить Шкафчик\", priority: \"low\"},\r\n        {id: v1(), todo: \"Починить Шкафчик\", priority: \"low\"},\r\n      ])\r\n      let todolist2 = todolist;\r\n    \r\n      let [filter, setFilter] = useState(\"all\");\r\n\r\n      \r\n    \r\n    \r\n      // =====/==============ДЗ 2 (Begin) =======================\r\n    \r\n      function toFilter(value: string) {  \r\n        setFilter(value)\r\n      }\r\n    \r\n      function removeTask(id: string) { // метод удаления\r\n        let f = todolist.filter(item => item.id !== id)\r\n        setTodolist(f);\r\n      }\r\n    \r\n      \r\n      if(filter === \"all\") {\r\n        todolist2 = todolist;\r\n      }\r\n    \r\n      if(filter === \"high\") {\r\n        todolist2 = todolist.filter(item => item.priority === \"high\");\r\n      }\r\n    \r\n      if(filter === \"middle\") {\r\n        todolist2 = todolist.filter(item => item.priority === \"middle\")\r\n      }\r\n      \r\n      if(filter === \"low\") {\r\n        todolist2 = todolist.filter(item => item.priority === \"low\");\r\n      }\r\n    \r\n      // \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\====ДЗ 2 (end)======\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\r\n    \r\n    \r\n    \r\n    \r\n    \r\n      /*  ====================   ДЗ 3  BEGIN    ====================*/\r\n      \r\n    \r\n    function hello(name: string) { // добавляем веденное имя в массив\r\n        if(name !== \"\") {\r\n          names.push({id: v1(), name: name});\r\n          alert(`Hello ${name}`);   \r\n        } else {\r\n          alert(\"Введите имя\")\r\n        }\r\n    }\r\n    \r\n      \r\n    \r\n    \r\n    \r\n    \r\n    return (\r\n        <>\r\n          <Username lastName={\"Kafarzada\"} firstName={\"Vurgun\"} patronymic={\"Эльдар оглы\"}/>\r\n          {messageElem} \r\n          <TodoList title={\"День 2\"} tasks={todolist2} toFilter={toFilter} removeTask={removeTask}/> \r\n\r\n\r\n          {/*  ===  =================   ДЗ 3  BEGIN    ====================*/}\r\n\r\n            <Hello hello={hello} names={names}/>\r\n            \r\n          {/*  ====================   ДЗ 3  ENG    ====================*/}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default PreJunior","import React, { useState, ChangeEvent } from 'react';\r\n\r\n\r\ntype EditableType = {\r\n    editMode: boolean\r\n    setEditMode: (value: boolean) => void\r\n    setInputValue: (value: string) => void\r\n    inputValue: string\r\n}\r\n\r\nconst Editable = (props: EditableType) => {\r\n    const onEditMode = ()=> {props.setEditMode(true)}\r\n    const offEditMode = ()=> {props.setEditMode(false);}\r\n    const onChangeHandler = (e:ChangeEvent<HTMLInputElement>)=> {props.setInputValue(e.currentTarget.value)}\r\n\r\n    return( \r\n        <div>\r\n            {\r\n                props.editMode \r\n                ? <input\r\n                    onBlur={offEditMode}\r\n                    type={\"text\"}\r\n                    autoFocus\r\n                    value={props.inputValue}\r\n                    onChange={(e) => {onChangeHandler(e)}}\r\n                    />\r\n                : <span onDoubleClick={onEditMode}>{props.inputValue}</span>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Editable;","import React, { useState } from 'react';\r\nimport Editable from '../Components/Common/Editable';\r\nimport ButtonNya from '../Components/ButtonNya/ButtonNya';\r\nimport { restore, saveState } from '../localStorage_functions';\r\n\r\nfunction Junior() {\r\n    \r\n    let [editMode, setEditMode] = useState<boolean>(false)\r\n    let [inputValue, setInputValue] = useState<string>('span');\r\n    \r\n    const onClickSaveHandler= () => { saveState(\"test\",  inputValue) }\r\n    const onClickRestoreHandler = ()=> { setInputValue(restore(\"test\")) }\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <Editable editMode={editMode} setEditMode={setEditMode} inputValue={inputValue} setInputValue={setInputValue}/>\r\n            <ButtonNya onClick={onClickSaveHandler} >save</ButtonNya>\r\n            <ButtonNya onClick={onClickRestoreHandler} >restore</ButtonNya>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Junior;"," export function saveState(key: string, state: string) { // метод для сохранения текста введенного в инпут\r\n    const stateAsString = JSON.stringify(state);\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n export function restore(key: string):string { // восстановление текста из памяти\r\n    const stateAsString = localStorage.getItem(key);\r\n    let result:string = '';\r\n    if(stateAsString !== null) {\r\n        result = JSON.parse(stateAsString)\r\n    }\r\n\r\n    return result;\r\n}","import React from 'react';\nimport './App.css';\nimport { HashRouter, Route } from 'react-router-dom';\nimport Navbar from './Components/Navbar/Navbar';\nimport PreJunior from './PreJunior/PreJunior';\nimport Junior from './Junior/Junior';\n\nexport type user = {\n  id: string,\n  name:string\n}\n\n\nfunction App() {\n\n\n\n  return (\n    <HashRouter>\n      <div className=\"App\">\n        <Navbar />\n        <div className={\"container\"}>\n          <Route path={\"/prejunior\"} component={PreJunior}/>\n          <Route path={'/junior'} component={Junior} />\n        </div>\n      </div>\n    </HashRouter>\n  );\n};\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MessageBox\":\"MessageBox_MessageBox__D9vfQ\",\"MessageBox__userName\":\"MessageBox_MessageBox__userName__3aof_\",\"MessageBox__date\":\"MessageBox_MessageBox__date__2sncj\",\"lastItem\":\"MessageBox_lastItem____pD8\",\"MessageBox__img\":\"MessageBox_MessageBox__img__2bCBe\",\"wrapper\":\"MessageBox_wrapper__3SWxA\",\"img\":\"MessageBox_img__bzpe3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__CXPiM\",\"nav__item\":\"Navbar_nav__item__cnVoi\",\"nav__link\":\"Navbar_nav__link__2nOak\",\"active\":\"Navbar_active__1F1yv\"};"],"sourceRoot":""}